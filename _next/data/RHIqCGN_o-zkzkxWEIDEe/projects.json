{"pageProps":{"projects":{"projects":[{"description":"An email client that you can control using discord","links":[{"type":"gitlab","link":"snailventilator/mailcord"}],"startDate":"2020-09-01","endDate":null,"id":"mailcord","language":{"id":"kotlin","name":"Kotlin"},"state":1,"tags":["smtp","imap","email","discord"],"teaser":"An email client that you can control using discord","usedTechnologies":[{"id":"gradle","name":"Gradle"},{"id":"jda","name":"JDA"}],"title":"Mailcord","related":[]},{"description":"I really like the concept of IRC (RFC 2812) and find it unfortunate that it isn't more widespread outside of mainly developers. Reading the IRC was really interesting because it dates back to April 2000 (the original IRC RFC 1459 was created in May 1993) and not at all outdated! So I decided to implement my own IRC server in Go. This is my first Go project and probably my last because there are many things I dislike about Go. It's an \"opinionated\" language after all.\nMy IRC server supports all commands that are needed to communicate in a channel but I might come back to this project later to implement some more e.g. private messages.","links":[{"type":"github","link":"profiluefter/IRCord"}],"startDate":"2020-08-25","endDate":"2020-08-28","id":"irc-cord","language":{"id":"go","name":"Go"},"state":2,"tags":["irc","discord","server","bridge","rfc","implementation"],"teaser":"IRC server that interacts with discord so you can use an IRC client to send discord messages because why not","title":"IRCord","usedTechnologies":[{"id":"go-modules","name":"Go Modules"},{"id":"discordgo","name":"discordgo"}],"related":[]},{"description":"The website you're looking at right now","links":[{"type":"github","link":"profiluefter/profiluefter.github.io"},{"type":"web","link":"https://profiluefter.me"}],"startDate":null,"endDate":null,"id":"profiluefter.me","title":"This website","teaser":"The website you're looking at right now","state":1,"language":{"id":"ts","name":"TypeScript"},"tags":["frontend","ci","deployment"],"usedTechnologies":[{"id":"react","name":"React.js"},{"id":"next.js","name":"Next.js"},{"id":"npm","name":"NPM"},{"id":"actions","name":"GitHub Actions"},{"id":"bootstrap","name":"Bootstrap"},{"id":"gh-pages","name":"GitHub Pages"}],"related":[]},{"description":"I started this project because I wanted to learn React.js. The Plan was to make a better frontend for GraM, because the PHP-based original would refresh and reset the position on each request. Because of this I started building a (pretty much feature complete) Android App in 2018/19.\nAfter I came up with the idea of this I noticed that this couldn't be done purely client-side because of missing CORS-Headers on the GraM servers. So I created a API with proper CORS-Headers and as an additional benefit: HTTPS\nMy webapp uses Redux to store the global state such as the fetched data. I also implemented Polling using redux-saga which refreshes the data every minute by default. It is also installable as a Progressive Web App and uses client-side asset caching for nearly instant page loading after the first visit. I used a dark themed version of Bootstrap for the design because my own designs look bad :/","links":[{"type":"github","link":"profiluefter/GraM-Frontend"},{"type":"web","link":"https://gram.profiluefter.me"}],"startDate":null,"endDate":null,"id":"gram-frontend","title":"GraM Frontend","teaser":"An alternative React-based Frontend for a teacher's grading system","state":3,"language":{"id":"js","name":"JavaScript"},"tags":["frontend","ci","deployment","alternative","workflow"],"usedTechnologies":[{"id":"react","name":"React.js"},{"id":"npm","name":"NPM"},{"id":"actions","name":"GitHub Actions"},{"id":"bootstrap","name":"Bootstrap"},{"id":"cf-worker","name":"Cloudflare Workers"},{"id":"gh-pages","name":"GitHub Pages"}],"related":[{"id":"grapi","title":"GrAPI"},{"id":"gram-app","title":"GraM Android App"}]},{"description":"I wanted to build something with React.js and had the idea of my GraM-Frontend project. I couldn't build it purely client-side because of missing CORS-Headers on the GraM-Site that prevented me from making requests and reading the response. I initially wanted to give up on this project because of this limitation.\nThe API is hosted using Cloudflare Workers which is server-side JavaScript that is executed on each request on a Cloudflare Server near your location. When you make eg. a login request, the Worker will make a request to the PHP frontend of GraM and obtain a login cookie that way. It is then sent back as JSON data so that the application can make other requests.\nAfter creating this I remembered that I had created an Android App in 2018/19 which fetched the whole page (including inline CSS and HTML) on each refresh of the data. Using this API not only prevents stealing passwords in our unsecured school WIFI but also saves a lot of data and battery power by offloading the HTML parsing to Cloudflare!\nCurrently there is no support for viewing or ticking homework because I can't reverse engineer it without an active homework on my account.","links":[{"type":"github","link":"profiluefter/GrAPI"}],"startDate":null,"endDate":null,"id":"grapi","title":"GrAPI","language":{"id":"js","name":"JavaScript"},"state":3,"usedTechnologies":[{"id":"cf-worker","name":"Cloudflare Workers"}],"teaser":"A Cloudflare Worker that exposes the PHP-Frontend of a teacher's grading system as an API","tags":["backend","ci","deployment","api","html parser","php","client"],"related":[{"id":"gram-frontend","title":"GraM Frontend"},{"id":"gram-app","title":"GraM Android App"}]},{"description":"A discord bot developed for our class' discord server","links":[{"type":"github","link":"profiluefter/ManagementBot"}],"startDate":null,"endDate":null,"id":"management-bot","language":{"id":"java","name":"Java"},"state":2,"tags":["discord","community","evaluate","code execution"],"title":"Management Bot","teaser":"A discord bot developed for our class' discord server","usedTechnologies":[{"id":"maven","name":"Maven"},{"id":"jda","name":"JDA"},{"id":"sqlite","name":"SQLite"},{"id":"junit","name":"JUnit"},{"id":"reflections","name":"Reflections"}],"related":[]},{"description":"An Android App for easier use of a teacher's grading system","links":[],"startDate":null,"endDate":null,"id":"gram-app","language":{"id":"java","name":"Java"},"state":3,"tags":["application","api client","html parser","php client","mobile"],"title":"GraM Android App","teaser":"An Android App for easier use of a teacher's grading system","usedTechnologies":[{"id":"gradle","name":"Gradle"},{"id":"android","name":"Android"}],"related":[]},{"description":"A experiment using Java Reflections and Runtime JAR loading","links":[],"startDate":null,"endDate":null,"id":"plugin-system","language":{"id":"java","name":"Java"},"state":4,"tags":["experiment","runtime","plug and play","framework"],"title":"Plugin System","teaser":"A experiment using Java Reflections and Runtime JAR loading","usedTechnologies":[{"id":"gradle","name":"Gradle"},{"id":"reflections","name":"Reflections"}],"related":[]},{"description":"In programming class in school we get provided with tasks via a Moodle instance. Now that I can use IntelliJ instead of Netbeans (the teachers use Netbeans to grade homeworks) because of my Netbeans-Exporter - I wanted to improve my workflow even more: Getting the task, programming it and submitting it in one program.\nThis plugin creates a new Toolbar in IntelliJ with an Overview of the contents of a Moodle course and a detailed view of each task. I'm using the official Moodle API.\nCurrently there is only read access (no submitting yet) and HTML-rendering somewhat works. I'm waiting for the embedded Chromium in IntelliJ to become more widely used so I can use it as well without sacrificing backwards-compatibility too much.","links":[{"type":"github","link":"profiluefter/MoodlePlugin"},{"type":"gitlab","link":"profiluefter/MoodlePlugin"},{"type":"jetbrains","link":"13902"}],"startDate":null,"endDate":null,"id":"moodle-plugin","language":{"id":"java","name":"Java"},"state":3,"title":"Moodle Plugin","teaser":"An Intellij-Plugin that enables using Moodle directly in the IDE","tags":["workflow optimization","school","jetbrains"],"usedTechnologies":[{"id":"gradle","name":"Gradle"},{"id":"intellij","name":"IntelliJ SDK"}],"related":[{"id":"netbeans-exporter","title":"NetBeans Exporter"}]},{"description":"A IntelliJ plugin that can export a IntelliJ Project using the NetBeans Project format","links":[{"type":"gitlab","link":"profiluefter/netbeans-exporter-plugin"},{"type":"jetbrains","link":"14275"}],"startDate":null,"endDate":null,"id":"netbeans-exporter","related":[{"id":"moodle-plugin","title":"Moodle Plugin"}],"language":{"id":"kotlin","name":"Kotlin"},"usedTechnologies":[{"id":"gradle","name":"Gradle"}],"teaser":"A IntelliJ plugin that can export a IntelliJ Project using the NetBeans Project format","tags":["workflow optimization","school","intellij","netbeans","jetbrains"],"state":2,"title":"NetBeans Exporter"},{"description":"My first major programming project: A general purpose Discord Bot","links":[{"type":"github","link":"profiluefter/DiscordBot"}],"startDate":null,"endDate":null,"id":"discord-bot","teaser":"My first major programming project: A general purpose Discord Bot","language":{"id":"java","name":"Java"},"state":2,"tags":["discord","api"],"title":"Discord Bot","usedTechnologies":[{"id":"jda","name":"JDA"},{"id":"maven","name":"Maven"}],"related":[]},{"description":"A simple NetBeans Project Generator using some specific settings","links":[{"type":"github","link":"profiluefter/PosGen"},{"type":"gitlab","link":"profiluefter/PosGen"}],"startDate":null,"endDate":null,"id":"pos-gen","language":{"id":"csharp","name":"C#"},"state":2,"tags":["workflow optimization","school","netbeans","generator","windows program","command line interface","cli"],"teaser":"A simple NetBeans Project Generator using some specific settings","title":"PosGen","usedTechnologies":[],"related":[{"id":"cli-gui","title":"CLI-Gui"}]},{"description":"A Java Framework for very fast generation of command line menus","links":[{"type":"github","link":"profiluefter/CLIGui"},{"type":"gitlab","link":"profiluefter/CLIGui"}],"startDate":null,"endDate":null,"id":"cli-gui","related":[{"id":"pos-gen","title":"PosGen"}],"language":{"id":"java","name":"Java"},"state":2,"tags":["reflections","rapid development","school","library","framework","cli","command line interface"],"title":"CLI-Gui","teaser":"A Java Framework for very fast generation of command line menus","usedTechnologies":[{"id":"maven","name":"Maven"}]},{"description":"A math formula graph generator - my first Kotlin project","links":[{"type":"github","link":"profiluefter/kotlinMathGraphThing"}],"startDate":null,"endDate":null,"id":"math-graph","language":{"id":"kotlin","name":"Kotlin"},"state":2,"tags":["kotlin","language learning","experiment","mathematics","graph","visualizer"],"teaser":"A math formula graph generator - my first Kotlin project","usedTechnologies":[{"id":"javafx","name":"JavaFX"}],"title":"Math Graph Thing","related":[]},{"description":"A primitive ScratchPad with touchscreen and Linux support","links":[],"startDate":null,"endDate":null,"id":"do-you-notice","language":{"id":"csharp","name":"C#"},"state":4,"tags":["windows","onenote","program","wpf","storage","serialization"],"title":"Do You Notice","teaser":"A primitive ScratchPad with touchscreen and Linux support","usedTechnologies":[],"related":[]},{"description":"A Kotlin Framework for making a DiscordBot with very little code","links":[],"startDate":null,"endDate":null,"id":"dslcord","language":{"id":"kotlin","name":"Kotlin"},"state":1,"tags":["dsl","efficiency","rapid prototyping","framework","kotlin","discord"],"title":"DSLCord","teaser":"A Kotlin Framework for making a DiscordBot with very little code","usedTechnologies":[{"id":"gradle","name":"Gradle"},{"id":"jda","name":"JDA"},{"id":"junit","name":"JUnit"},{"id":"dsl","name":"Domain Specific Language"}],"related":[]},{"description":"An Emulator for the fictive Chip9 CPU - Part of a CTF challenge","links":[{"type":"gitlab","link":"profiluefter/Chip9-Emulator"}],"startDate":null,"endDate":null,"id":"chip9","title":"Chip9 Emulator","teaser":"An Emulator for the fictive Chip9 CPU - Part of a CTF challenge","state":4,"tags":["ctf","emulator","memory management","processor","low level","binary","assembly"],"usedTechnologies":[],"language":{"id":"c","name":"C"},"related":[]},{"description":"A distributed MIDI player that uses a lot of smartphones for playback","links":[{"type":"gitlab","link":"profiluefter/midisync"}],"startDate":null,"endDate":null,"id":"midisync","title":"MIDI-Sync","language":{"id":"js","name":"JavaScript"},"usedTechnologies":[{"id":"npm","name":"NPM"}],"tags":["synchronized","multi-device","music","fullstack"],"state":4,"teaser":"A distributed MIDI player that uses a lot of smartphones for playback","related":[]}],"technologies":[{"id":"react","name":"React.js"},{"id":"next.js","name":"Next.js"},{"id":"cf-worker","name":"Cloudflare Workers"},{"id":"npm","name":"NPM"},{"id":"maven","name":"Maven"},{"id":"jda","name":"JDA"},{"id":"sqlite","name":"SQLite"},{"id":"junit","name":"JUnit"},{"id":"gradle","name":"Gradle"},{"id":"android","name":"Android"},{"id":"reflections","name":"Reflections"},{"id":"intellij","name":"IntelliJ SDK"},{"id":"actions","name":"GitHub Actions"},{"id":"bootstrap","name":"Bootstrap"},{"id":"gh-pages","name":"GitHub Pages"},{"id":"dsl","name":"Domain Specific Language"},{"id":"javafx","name":"JavaFX"},{"id":"go-modules","name":"Go Modules"},{"id":"discordgo","name":"discordgo"}],"languages":[{"id":"js","name":"JavaScript"},{"id":"ts","name":"TypeScript"},{"id":"java","name":"Java"},{"id":"csharp","name":"C#"},{"id":"kotlin","name":"Kotlin"},{"id":"c","name":"C"},{"id":"go","name":"Go"}]}},"__N_SSG":true}